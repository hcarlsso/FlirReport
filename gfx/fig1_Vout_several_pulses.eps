%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 341 185
%%HiResBoundingBox: 0 0 341 185
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font GOOICD+Helvetica
%!FontType1-1.0: GOOICD+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /GOOICD+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 729] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF350A90A5782FFBE48234DAA06C5D150B2EC09D77404EC3D
B43160154612D64E10BACD89A617F4DEA98A315408AD9D54BEFC25C4416E4A72
6632CCC5C9AF2C341A0AE136E29843D68B1251F5FA845C13AC8B7DE251BFFEA8
A8EDD813DCEE74501D2E689B7E24D26500F2D6EE48A8B8000CB839582669CE55
2E2326EC60875EE39AF01AD6CB90C35E45C7457BC5DF2F5DDEF359EF900C4305
892DDBF4A54E0F17CE583C881EC5B637BE06422D55081E3C820350DB98F8E59D
90D68974E792426B83171A1525A9887475DB9467E2952DB03BED2243628A1479
569D8C85455B2A36C4128F4135C0DB96A62BDA3F1C7573B19B354FF26E212F1F
50EDF9A6911C6BF6CFED2D8859719822649F82D7423676B53D993E4EEF68AFE1
50047DABA4EB8A895195EBC34FBD89105F7AD442648B023710E020C8F8984E6A
A722916736633A11ADDBEDAF9B3C85FC748BA29A63425BEEADF4AF833EA3B5E8
EF03E88539049F94B849EA8B063CE926CE9275D74E268BBE70767F81D543AF05
916EE1FACF0E09DD918C12D0B41DC86E5A7859DD2594AA0A56064F36A5ECF2BE
CD43129B2AB3FA1D426A652207653E42AB00B028B9B7A9188D9228F206472442
90255B7FD2730566761C7586E87DD39D0D2F09AFFF4F84DF372E9BCF9A574918
40FD705C3EE2F7311FE3294ECB85F42B6F148AFD6BA49BC6D0221F751E82BEE4
C487D0DA0CE60E72CDEA8EC55BDA0E75FB9D0CF5591271C0AD2554DCE00D6A55
DCDFA10C1E7410846E73631CDAC54F6A506C6C8DA117AB048B2A035D14EAE3CD
8B875B9916DCA79E3A669067773401832AB256812699D6426711661EBB85777E
E5FFE70EE64095DABD736C72F421348A03D89563C55B0136A0F877D6896C95D2
EE615BAFE8600FE87B5DCD8344137F9593B89514EB639E5347317E1493F8E54C
E6E893FB2B1551FBDC24DD344CC2FE3CE38934412EE1A7F077A8B32671BC7F5A
2F153EEDF5C54E71AE90A6DCB3BBCA90D929388D03C9DFDEDEF6C764336F8BAB
995D3C0B0FB584F794CB1CA3F27B437ED30E49DDAF1CAD998109ACB8BA66DF79
2FDBF7E0C1CB237827EA648B60ADD6FD86E264086721C0FEB48B06CF1C247DF2
FEFD68E7C0942F4D6DD00DD780F53236340D43DCC0BD1E6276CA7406F752BF51
02795A7C308C57C705DF3FE99D81B69A09F5085C6039E7EB3766BEFAAC4C13F3
CFBF61F04FC3E8D0447C8C4D015A2085A9DB7E8F3197C4DE6DFD6EC8C7F9AC96
E3DF5635CEBFC2AA0BDE70DB6676DEFBD4ACA5BEBE0F6CAF12657F3A876E7254
73ED6C5E60805FD5FFADFCE102B0FA2CD2DF69280E0942CCC0523FDE2E3E64C7
882916D4C6F9351AF31E0D9E39C54F0EC8257379D4D53C2FE9EFC60B6BB28B8C
0A72B5DE623ED87CD4583DD2503CE1B0BC220D045BB2A84126112E4D519776C2
D29804D2BA1032E4207FA6A3A8A83CEE2B89F8DAADD262C3298DB1D4D62B861C
3842024822A2FB610651F3ECD72C50C968FB33256879706AD656FB0306E57BB7
8461BEA446BD157E90E6A19BC2E0C243EFB175CA45EA5E3F6269BFFE5748E6C5
1E6E1AA4119EA37B35F29CF3B3B74C4A00EB441F872E2E2068AC6FBA49F77E52
C66E36A1E741E6EF238DE25FEF7A426D5721060FD32E44D5BBBFCC016165794A
859AB59C90CB9258AAD99F1AA0013D096DE8A0D0AE96D1231EFA09B5FA49798B
A55F38AEA971B61A4F4D9C68E39D5C10BB4B66E0FD1B13937981260ABE4B97BA
2C525A8A15799E15F36C66A27217D61AEE8C43526E37D7AC19EC3C5F75368C2A
61D47A28FE07FDDDEE8BC6D1D9E9E88DE4BCEA3849F205E25FF254AB0039E2F6
1B13908B658B4A28CB43688598F9B7E59ECD935BB1CCF155B643143EDB79C758
C652CB8A413E20AA432E0E824127B278B33C1A04BBE7566129354363F084EE5B
D05323CB08CED9EA0E9D658B9F66B86F5A91A6C095B181CFA3637352B76000A4
532FEAB8738FD81A12D3B44BA5419CA84E49436A9EFA63C4E01E879E07F11AB1
CB201A55974A654B33D4C331E496BEC49EBDD92087449339F6BBCD68310FC3F0
1D76D5A3730A89748AEDA6C25AC1D7EE0CD0E0A5D75A48026B375898DC41FFFD
E597B2743C6C7EF591FAED04BF1D1C193F70C0A053E574AFD06D048B9A5977EA
9EBC39DADDD89C4A581EB99F6341D7981C52045C238F7911676C0B73B2F70400
2D9E1F1BEBA9A3AF75750377636249A82B33795E0D1698BB4E067F003F834602
CFA5A3BA4CF5211B0B2E755BE2B392BEC34816702EA29EDB4712B585468BE56C
39CA309198D125253956213FFCE5046BD8617871B617AD5907EFF66FDDFB0D22
7930709D142F459742B58F25A7A82F7E77B8C8FFEAD11EF78A4EA799969A8127
C3A576DD066E7575162D88A56FBE98C08065C0B6FCD0FB209CCC72F1CB9E4385
41BC155340ADC90B6910B9548D21BCE1CDA01EE3B34F1F759A348E5AB9C56EF9
D263CDEAE65F14D8F4C72A02C0A907EEE85EF0702F548B2C6864E021A1215CD4
D118B4F6B0D5E2DB8F00734149B9591DD343C99C0F05DC1694D2B8F7B637EB4A
DD357AA251B5E87F117D7804BC514D7415AC7140F1E8A73C6421F51381299F88
230D6074E51AAD63C12595FC3DBAACF83DBCB276C1F08E95DB2FD2A04857B3D3
2115D9138FC66FE308E61855E20FA9B44239B36D38B3F036FCDDD387BA5DA23B
7FD916D4E6C49289F2D538451977A7302B36CF50039B0EF71795DA39D677912D
04BCACCE284C53217AAD6016EC445ACD7B5EAC1BADBCB27722E2692A67968D50
BDA6FF55C560D4173982C523439AF4C1D8DA96D9BE4405132D2D5CA389B47C1B
E2AB8FF0157BE5A50AC0353C38A320B852AD92D4F15724EDEC463B82EFD571DB
645CB6535744BA6440790157E5F507EEC0C1174B69D6E39CB0BBED95D7366903
87972A0D87A74BB9AE33916A18B109DC6C3F501F5901797042A66E93033FD9E2
552A1EEB2781A48445CF87E75F76EDFE8685D0FE9994F739DAEAF972
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /GOOICD+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 341 185 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
385.051 290.43 2917.88 1500.63 re
f
5.00207 w
1 j
/DeviceGray {} CS
[0.873] SC
385.051 290.43 m
385.051 1791.05 l
S
968.625 290.43 m
968.625 1791.05 l
S
1552.2 290.43 m
1552.2 1791.05 l
S
2135.78 290.43 m
2135.78 1791.05 l
S
2719.35 290.43 m
2719.35 1791.05 l
S
3302.93 290.43 m
3302.93 1791.05 l
S
3302.93 290.43 m
385.051 290.43 l
S
3302.93 590.555 m
385.051 590.555 l
S
3302.93 890.68 m
385.051 890.68 l
S
3302.93 1190.8 m
385.051 1190.8 l
S
3302.93 1490.93 m
385.051 1490.93 l
S
3302.93 1791.05 m
385.051 1791.05 l
S
2 J
/DeviceGray {} CS
[0.1489] SC
385.051 290.43 m
3302.93 290.43 l
S
385.051 1791.05 m
3302.93 1791.05 l
S
385.051 290.43 m
385.051 319.609 l
S
968.625 290.43 m
968.625 319.609 l
S
1552.2 290.43 m
1552.2 319.609 l
S
2135.78 290.43 m
2135.78 319.609 l
S
2719.35 290.43 m
2719.35 319.609 l
S
3302.93 290.43 m
3302.93 319.609 l
S
385.051 1791.05 m
385.051 1761.88 l
S
968.625 1791.05 m
968.625 1761.88 l
S
1552.2 1791.05 m
1552.2 1761.88 l
S
2135.78 1791.05 m
2135.78 1761.88 l
S
2719.35 1791.05 m
2719.35 1761.88 l
S
3302.93 1791.05 m
3302.93 1761.88 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 35.4738 16.5473] Tm
0 0 Td
/F8_0 9.50015 Tf
(0)
[5.282083
0] Tj
-4789.06 TJm
(0.02)
[5.282083
0
2.641042
0
5.282083
0
5.282083
0] Tj
-4196.83 TJm
(0.04)
[5.282083
0
2.641042
0
5.282083
0
5.282083
0] Tj
-4196.83 TJm
(0.06)
[5.282083
0
2.641042
0
5.282083
0
5.282083
0] Tj
-4196.87 TJm
(0.08)
[5.282083
0
2.641042
0
5.282083
0
5.282083
0] Tj
-4515.94 TJm
(0.1)
[5.282083
0
2.641042
0
5.282083
0] Tj
119.748 -12.5156 Td
/F8_0 10.4498 Tf
(time \(secs\))
[2.905044
0
2.319856
0
8.704683
0
5.810089
0
2.905044
0
3.479783
0
5.2249
0
5.810089
0
5.2249
0
5.2249
0
3.479783
0] Tj
Q
385.051 290.43 m
385.051 1791.05 l
S
3302.93 290.43 m
3302.93 1791.05 l
S
385.051 290.43 m
414.227 290.43 l
S
385.051 590.555 m
414.227 590.555 l
S
385.051 890.68 m
414.227 890.68 l
S
385.051 1190.8 m
414.227 1190.8 l
S
385.051 1490.93 m
414.227 1490.93 l
S
385.051 1791.05 m
414.227 1791.05 l
S
3302.93 290.43 m
3273.75 290.43 l
S
3302.93 590.555 m
3273.75 590.555 l
S
3302.93 890.68 m
3273.75 890.68 l
S
3302.93 1190.8 m
3273.75 1190.8 l
S
3302.93 1490.93 m
3273.75 1490.93 l
S
3302.93 1791.05 m
3273.75 1791.05 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.9473 25.6316] Tm
0 0 Td
/F8_0 9.50015 Tf
(1.2)
[5.282083
0
2.641042
0
5.282083
0] Tj
0 30.0125 Td
(1.4)
[5.282083
0
2.641042
0
5.282083
0] Tj
0 60.0254 Td
(1.6)
[5.282083
0
2.641042
0
5.282083
0] Tj
0 90.0379 Td
(1.8)
[5.282083
0
2.641042
0
5.282083
0] Tj
9.09492 120.0504 Td
(2)
[5.282083
0] Tj
0 150.0633 Td
(2.2)
[5.282083
0
2.641042
0
5.282083
0] Tj
[0 1 -1 0 10.4633 79.0633] Tm
0 0 Td
/F8_0 10.4498 Tf
(V)
[6.970017
0] Tj
7.57891 -4.54727 Td
/F8_0 8.36028 Tf
(samp)
[4.18014
0
4.648316
0
6.964113
0
4.648316
0] Tj
31.07341 0 Td
/F8_0 10.4498 Tf
( \(V\))
[2.905044
0
3.479783
0
6.970017
0
3.479783
0] Tj
Q
[75.789 45.4734] 0 d
0 J
2 j
/DeviceGray {} CS
[0] SC
386.945 1758.39 m
1359.57 599.242 l
2332.2 569.094 l
3302.83 569.094 l
S
[] 0 d
7.5789 w
1 j
386.949 1788.71 m
386.949 1728.08 l
356.633 1758.39 m
417.266 1758.39 l
365.734 1779.61 m
408.164 1737.18 l
365.734 1737.18 m
408.164 1779.61 l
S
1359.58 629.547 m
1359.58 568.918 l
1329.27 599.234 m
1389.89 599.234 l
1338.37 620.445 m
1380.79 578.02 l
1338.37 578.02 m
1380.79 620.445 l
S
2332.21 599.398 m
2332.21 538.77 l
2301.9 569.086 m
2362.53 569.086 l
2311 590.297 m
2353.43 547.871 l
2311 547.871 m
2353.43 590.297 l
S
3302.85 599.398 m
3302.85 538.77 l
3272.54 569.086 m
3333.17 569.086 l
3281.64 590.297 m
3324.06 547.871 l
3281.64 547.871 m
3324.06 590.297 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font GOOICD+Helvetica
%%EOF
